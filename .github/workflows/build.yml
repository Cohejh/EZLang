name: Build and Release

on:
  push:
    branches:
      - main
    paths:
      - 'OpenEZ/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
      id: python-setup

    - name: Verify Python version
      run: |
        python --version
      shell: bash

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./OpenEZ/requirements.txt
      shell: bash

    - name: Extract version
      id: get_version
      run: |
        VERSION=$(jq -r '.version' build-config.json)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
      shell: bash

    - name: Debug matrix OS
      run: |
        echo "Matrix OS is ${{ matrix.os }}"
      shell: bash

    - name: Build executable
      run: |
        cd OpenEZ
        if [ ${{ matrix.os }} == 'windows-latest' ]; then
          pyinstaller --onefile --name OpenEZ.exe OpenEZ.py
          mkdir -p dist/windows
          mv dist/OpenEZ.exe dist/windows/OpenEZ.exe
        elif [ ${{ matrix.os }} == 'macos-latest' ]; then
          pyinstaller --onefile OpenEZ.py
          mkdir -p dist/macos
          mv dist/OpenEZ dist/macos/OpenEZ
        elif [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
          pyinstaller --onefile OpenEZ.py
          mkdir -p dist/linux
          mv dist/OpenEZ dist/linux/OpenEZ
        else
          echo "Unknown OS: ${{ matrix.os }}"
          exit 1
        fi
      shell: bash

    - name: Archive binaries
      run: |
        if [ ${{ matrix.os }} == 'windows-latest' ]; then
          pwsh -Command "Compress-Archive -Path dist/windows/* -DestinationPath dist/OpenEZ-Windows.zip"
        elif [ ${{ matrix.os }} == 'macos-latest' ]; then
          if [ -d "dist/macos" ] && [ "$(ls -A dist/macos)" ]; then
            zip -r dist/OpenEZ-MacOS.zip dist/macos
          else
            echo "No files to zip in dist/macos"
            exit 1
          fi
        elif [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
          tar -czvf dist/OpenEZ-Linux.tar.gz -C dist/linux OpenEZ
        else
          echo "Unknown OS: ${{ matrix.os }}"
          exit 1
        fi
      shell: bash

    - name: Create Release
      id: release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ env.VERSION }}"
        name: "Release v${{ env.VERSION }}"
        files: |
          dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify Release Creation
      run: |
        gh release view "v${{ env.VERSION }}" || exit 1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload build artifacts to release
      if: success() && github.event_name == 'push'
      run: |
        if [ $RUNNER_OS == "Windows" ]; then
          $files = Get-ChildItem -Path dist -File
          foreach ($file in $files) {
            Write-Host "Uploading $($file.FullName)"
            gh release upload "v${{ env.VERSION }}" $file.FullName --clobber
          }
        else
          for file in dist/*; do
            if [ -f "$file" ]; then
              echo "Uploading $file"
              gh release upload "v${{ env.VERSION }}" $file --clobber
            else
              echo "$file is not a file. Skipping."
            fi
          done
        fi
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
